name: Build and deploy Jekyll (low-disk friendly)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout with shallow history (saves space)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          lfs: false  # skip downloading large LFS files

      # 2) See disk before cleanup (debugging)
      - name: Disk usage (before)
        run: df -h

      # 3) Free space by removing large preinstalled toolchains we don't need
      - name: Free disk space
        run: |
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/ghc || true
          sudo apt-get clean || true
          sudo rm -rf /var/lib/apt/lists/* || true
          df -h

      # 4) Configure Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 5) Setup Ruby for Jekyll
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # 6) Install Jekyll & build site
      - name: Build Jekyll site
        env:
          JEKYLL_ENV: production
        run: |
          bundle install --path vendor/bundle --jobs 4 --retry 3
          bundle exec jekyll build --trace
          rm -rf vendor/bundle  # free Ruby gem cache after build

      # 7) Upload the _site folder for deployment
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
